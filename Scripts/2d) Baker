import bpy

#Using Blender 4.1
#Last tested April 24th, 2024 

#Use after you completed manual clean up of the motion, but before baking with Animation Layers

#Set your working directory
Base='C:\\Users\\Dhwoo\\OneDrive\\Desktop\\Galt Workspace'
file_name = bpy.path.basename(bpy.context.blend_data.filepath)


fnsplit = file_name.split()
Stamp = " ".join(fnsplit[:-1])

ArchivePathblend=Base+'\\'+Stamp+'\\' + file_name
bpy.ops.wm.save_as_mainfile(filepath=ArchivePathblend)

#Snap all fk limbs to ik, this helps standardize motion
def snap_fk_to_ik(armature_name, fk_bones, ik_bones, frame_range):
    armature = bpy.data.objects.get(armature_name)
    if armature is None or armature.type != 'ARMATURE':
        print(f"Object '{armature_name}' not found or not an armature")
        return
    for frame in frame_range:
        bpy.context.scene.frame_set(frame)
        for fk_bone, ik_bone in zip(fk_bones, ik_bones):
            fk_bone_obj = armature.pose.bones.get(fk_bone)
            ik_bone_obj = armature.pose.bones.get(ik_bone)
            if fk_bone_obj is None or ik_bone_obj is None:
                print(f"Bones '{fk_bone}' or '{ik_bone}' not found in armature '{armature_name}'")
                continue
            fk_bone_obj.matrix = ik_bone_obj.matrix
            for channel in ['location', 'rotation_quaternion', 'scale']:
                armature.keyframe_insert(data_path=f'pose.bones["{fk_bone}"].{channel}', frame=frame)
        bpy.context.view_layer.update()


armature_name = 'root'

fkarm_bonesR = ['bicepfk_R', 'forearmfk_R', 'handfk_R']
ikarm_bonesR = ['bicepik_R', 'forearmik_R', 'handik_R']
fkarm_bonesL = ['bicepfk_L', 'forearmfk_L', 'handfk_L']
ikarm_bonesL = ['bicepik_L', 'forearmik_L', 'handik_L']


scene_end = bpy.context.scene.frame_end

frame_range = range(0, scene_end) 

snap_fk_to_ik(armature_name, fkarm_bonesR, ikarm_bonesR, frame_range)
snap_fk_to_ik(armature_name, fkarm_bonesL, ikarm_bonesL, frame_range)

fkleg_bonesR = ['thighfk_R', 'shinfk_R', 'footfk_R']
ikleg_bonesR = ['thighik_R', 'shinik_R', 'footik_R']
fkleg_bonesL = ['thighfk_L', 'shinfk_L', 'footfk_L']
ikleg_bonesL = ['thighik_L', 'shinik_L', 'footik_L']

snap_fk_to_ik(armature_name, fkleg_bonesR, ikleg_bonesR, frame_range)
snap_fk_to_ik(armature_name, fkleg_bonesL, ikleg_bonesL, frame_range)



bpy.context.scene.transform_orientation_slots[0].type = 'LOCAL'

bpy.context.object.data.collections["Limbs Corrections"].is_visible = True
bpy.context.object.data.collections["Limbs FK"].is_visible = True
bpy.context.object.data.collections["Limbs IK"].is_visible = True
bpy.context.object.data.collections["Limbs IK Correction"].is_visible = True
bpy.context.object.data.collections["Spine Input"].is_visible = True
bpy.context.object.data.collections["Fingers FK"].is_visible = True
bpy.context.object.data.collections["Fingers IK"].is_visible = True
bpy.context.object.data.collections["Fingers Intermediate"].is_visible = True
bpy.context.object.data.collections["Unreal (Deform Rig)"].is_visible = True
bpy.context.object.data.collections["Intermediate Rig"].is_visible = True
bpy.context.object.data.collections["HeadCTRL"].is_visible = True



#Now go use "Merge / Bake" in animation layers
#I recommend Anim layers, Merge, Down, and Merge/cyclic being checked.
